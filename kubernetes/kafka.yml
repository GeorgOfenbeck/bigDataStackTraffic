apiVersion: v1
kind: Namespace
metadata:
  name: bigdata

---
apiVersion: v1
kind: Service
metadata:
  name: kafka-service
  namespace: bigdata
spec:
  ports:
    - port: 9092
      targetPort: 9092
  selector:
    app: kafka

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  namespace: bigdata
spec:
  serviceName: "kafka"
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
        - name: kafka
          image: wurstmeister/kafka:latest
          ports:
            - containerPort: 9092
          env:
            - name: KAFKA_ADVERTISED_LISTENERS
              value: PLAINTEXT://kafka-service:9092
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: zookeeper-service:2181
          volumeMounts:
            - name: kafka-storage
              mountPath: /kafka
  volumeClaimTemplates:
    - metadata:
        name: kafka-storage
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi

---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper-service
  namespace: bigdata
spec:
  ports:
    - port: 2181
      targetPort: 2181
  selector:
    app: zookeeper

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: zookeeper
  namespace: bigdata
spec:
  serviceName: "zookeeper"
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      containers:
        - name: zookeeper
          image: wurstmeister/zookeeper:latest
          ports:
            - containerPort: 2181
          volumeMounts:
            - name: zookeeper-storage
              mountPath: /zookeeper
  volumeClaimTemplates:
    - metadata:
        name: zookeeper-storage
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi
