apiVersion: v1
kind: PersistentVolume
metadata:
  name: namenode-pv
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /mnt/data/namenode

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: namenode-pvc
  namespace: bigdata
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: hadoop-config
  namespace: bigdata
data:
  core-site.xml: |
    <configuration>
      <property>
        <name>fs.defaultFS</name>
        <value>hdfs://namenode:9000</value>
      </property>
    </configuration>
  hdfs-site.xml: |
    <configuration>
      <property>
        <name>dfs.replication</name>
        <value>1</value>
      </property>
    </configuration>

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: namenode
  namespace: bigdata
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hadoop
      component: namenode
  template:
    metadata:
      labels:
        app: hadoop
        component: namenode
    spec:
      initContainers:
      - name: init-namenode
        image: sbloodys/hadoop:3.3.6
        command: ["hdfs", "namenode", "-format", "-force"]
        volumeMounts:
        - name: namenode-storage
          mountPath: /tmp/hadoop-root/dfs/name
        - name: hadoop-config
          mountPath: /etc/hadoop/conf
        env:
        - name: HADOOP_CONF_DIR
          value: /etc/hadoop/conf
      containers:
      - name: namenode
        image: sbloodys/hadoop:3.3.6
        command: ["hdfs", "namenode"]
        ports:
        - containerPort: 9870
        volumeMounts:
        - name: namenode-storage
          mountPath: /tmp/hadoop-root/dfs/name
        - name: hadoop-config
          mountPath: /etc/hadoop/conf
        env:
        - name: HADOOP_CONF_DIR
          value: /etc/hadoop/conf
      volumes:
      - name: namenode-storage
        emptyDir: {}
      - name: hadoop-config
        configMap:
          name: hadoop-config
